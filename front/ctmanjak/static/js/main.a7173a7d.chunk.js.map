{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["url","useStyles","makeStyles","theme","root","width","margin","toolbar","mixins","dialog_textfield","minWidth","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","drawer","flexShrink","drawerPaper","drawerHeader","content_card","content_bullet","transform","content_title","fontSize","content_pos","marginBottom","add_bounty","right","bottom","title_card","text_card","maxHeight","overflow","textOverflow","bounty_card","textAlign","date_card","btn_card","LoginScreen","props","classes","useState","open","login_page","state","setState","showPassword","input","setInput","setStatus","login","setLogin","email","setEmail","password","setPassword","nickname","setNickname","useCookies","setCookie","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleTogglePage","handleRegister","myInit","method","header","body","JSON","stringify","myRequest","Request","fetch","then","res","console","log","handleLogin","useEffect","a","async","status","useMemo","className","Drawer","anchor","onClose","type","key","onClick","TextField","label","variant","InputProps","startAdornment","InputAdornment","Email","value","onChange","target","Lock","endAdornment","IconButton","aria-label","onMouseDown","Visibility","VisibilityOff","Button","style","AccountCircle","SideDrawer","setOpen","cookies","menu","bounty","mypage","toggleDrawer","handleDrawerClick","onClickList","currentTarget","querySelector","innerText","useHistory","paper","ChevronLeft","List","Object","keys","map","index","ListItem","button","component","Link","to","ListItemIcon","AttachMoney","ListItemText","primary","BountyCard","Card","CardContent","Typography","text","CardActions","timelimit","size","AddBountyDialog","setTitle","setText","setBounty","Date","date","setDate","time","setTime","time_limit","Dialog","aria-labelledby","DialogTitle","id","InputLabelProps","shrink","BountyPage","content","setContent","json","data","Fab","Add","MainScreen","openBottomDrawer","setOpenBottomDrawer","openSideDrawer","setOpenSideDrawer","setSelectedItem","AppBar","Toolbar","edge","Menu","Search","InputBase","placeholder","inputProps","path","selected_item","tutorialSteps","head","TutorialScreen","activeStep","setActiveStep","axis","onChangeIndex","step","enableMouseEvents","MobileStepper","steps","length","nextButton","prevActiveStep","KeyboardArrowRight","backButton","disabled","KeyboardArrowLeft","App","Boolean","window","location","hostname","match","ReactDOM","render","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7173a7d.chunk.js","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Link, useHistory } from 'react-router-dom'\nimport './App.css'\nimport { MobileStepper, Button, SwipeableDrawer, Drawer, TextField, InputAdornment, IconButton, AppBar, Toolbar, Typography, InputBase,\n  ListItem, ListItemIcon, List, ListItemText, Divider, Card, CardContent, CardActions, Fab, Dialog, DialogTitle } from '@material-ui/core'\nimport { makeStyles, fade } from '@material-ui/core/styles'\nimport { DateTimePicker } from 'material-ui-pickers'\nimport { KeyboardArrowLeft, KeyboardArrowRight, AccountCircle, Visibility, VisibilityOff, Book, Lock, Search, Email, Menu, Inbox, ChevronLeft, AttachMoney, Add } from '@material-ui/icons'\nimport SwipeableViews from 'react-swipeable-views'\nimport { withCookies, Cookies, useCookies } from 'react-cookie';\nimport User from './user.json'\n\nconst url = \"http://45.76.100.227\"\n\nfunction UserRegister(email, nickname, password) {\n  const emailPattern = new RegExp(\"^[0-z]+@[0-z]+\\.[0-z]+$\")\n  const passwordPattern = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[0-z!@#$%^&*]{8,}$\")\n\n  if (!emailPattern.test(email)) {\n    return \"email error\"\n  } else if (!passwordPattern.test(password)) {\n    return \"password error\"\n  }\n  return \"success\"\n}\n\nfunction UserLogin(email, password) {\n  return true\n}\n\nfunction LoginForm() {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [nickname, setNickname] = useState(\"\")\n\n  const handleChange = event => {\n    event.target.className === \"email_input\" ? setEmail(event.target.value) : setPassword(event.target.value)\n  }\n\n  const handleSubmit = event => {\n    console.log(UserRegister(email, nickname, password))\n  }\n\n  return (\n    <div className=\"loginform\">\n      <input className=\"email_input\" value={email} onChange={handleChange} />\n      <input className=\"password_input\" type=\"password\" value={password} onChange={handleChange} />\n      <button className=\"login_button\" onClick={handleSubmit}>로그인</button>\n    </div>\n  )\n}\n\nconst drawerWidth = 240\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"90%\",\n    margin: 10,\n  },\n  toolbar: theme.mixins.toolbar,\n  dialog_textfield: {\n    minWidth: 240,\n    margin: 10,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: '100%',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content_card: {\n    minWidth: 275,\n  },\n  content_bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  content_title: {\n    fontSize: 14,\n  },\n  content_pos: {\n    marginBottom: 12,\n  },\n  add_bounty: {\n    position: 'fixed',\n    right: 25,\n    bottom: 25,\n  },\n  title_card: {\n    display: 'inline-block',\n    position: 'relative',\n    width: '80%',\n  },\n  text_card: {\n    maxHeight: 100,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  bounty_card: {\n    display: 'inline-block',\n    position: 'relative',\n    textAlign: 'right',\n    bottom: 10,\n    width: '20%',\n    fontSize: 12,\n  },\n  date_card: {\n    display: 'inline-block',\n    position: 'relative',\n    width: '80%',\n  },\n  btn_card: {\n    display: 'inline-block',\n    position: 'relative',\n    textAlign: 'center',\n    bottom: 10,\n    width: '20%',\n  }\n}))\n\nfunction LoginScreen(props) {\n  const classes = useStyles()\n  const [state, setState] = useState({\n    open: false,\n    login_page: true,\n  })\n  const [input, setInput] = useState({\n    showPassword: false,\n  })\n  const [status, setStatus] = useState(false)\n  const [login, setLogin] = useState(true)\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [nickname, setNickname] = useState(\"\")\n  const [cookies, setCookie, removeCookie] = useCookies(['cookie-name']);\n\n  const toggleDrawer = (open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    props.onClick(open)\n    setState({...state, open: open })\n  }\n  const handleClickShowPassword = () => {\n    setInput({showPassword: !input.showPassword})\n  }\n  const handleMouseDownPassword = event => {\n    event.preventDefault()\n  }\n  const handleTogglePage = () => {\n    setState({...state, login_page: !state.login_page})\n  }\n  const handleRegister = () => {\n    const myInit = {\n      method: 'POST',\n      header: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        nickname: nickname,\n        email: email,\n        password: password,\n      }),\n    };\n  \n    const myRequest = new Request(url+\"/Users/SignUp\", myInit);\n    \n    fetch(myRequest).then(res => {\n      return res;\n    }).then(res => {\n      console.log(res);\n    })\n  }\n\n  const handleLogin = () => {\n    setLogin(!login)\n    // request({\n    //   method: 'POST',\n    //   uri: url+\"/Users/SignIn\",\n    //   json: true,\n    //   body: JSON.stringify({\n    //     email: email,\n    //     password, password,\n    //   })\n    // },\n    // function (error, response, body) {\n    //   console.log(response)\n    // })\n  }\n  \n  const myInit = {\n    method: 'POST',\n    header: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  };\n\n  const myRequest = new Request(url+\"/Users/SignIn\", myInit);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await fetch(myRequest).then(async (res) => {\n        if (res.status === 200) {\n          setCookie(\"email\", email)\n          setStatus(true)\n        }\n      })\n    }\n\n    fetchData()\n  }, [login]);\n  useMemo(() => (setState({...state, open:props.open})), [props.open]);\n\n  const bottomDrawer = login_page => (\n    login_page ? (\n      <div className=\"bottomDrawer\">\n        <TextField\n          className={classes.root} label=\"이메일\" variant=\"outlined\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Email />\n              </InputAdornment>\n            ),\n          }}\n          value={email}\n          onChange={event => {\n            setEmail(event.target.value)\n          }}\n        />\n        <TextField\n          className={classes.root} label=\"패스워드\" variant=\"outlined\"\n          type={input.showPassword ? 'text' : 'password'}\n          InputProps={\n            {\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Lock />\n                </InputAdornment>\n              ),\n              endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {input.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n              ),\n            }\n          }\n          value={password}\n          onChange={event => {\n            setPassword(event.target.value)\n          }}\n        />\n        <Button\n          className={classes.root}\n          variant=\"contained\"\n          onClick={handleLogin}\n        >\n          로그인\n        </Button>\n        <p>\n          계정이 없으신가요? <Button onClick={handleTogglePage} style={{padding: 0, fontSize: 12}}>회원가입</Button>\n        </p>\n      </div>\n    ) : (\n      <div className=\"bottomDrawer\">\n        <TextField\n          className={classes.root} label=\"이메일\" variant=\"outlined\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Email />\n              </InputAdornment>\n            ),\n          }}\n          value={email}\n          onChange={event => {\n            setEmail(event.target.value)\n          }}\n        />\n        <TextField\n          className={classes.root} label=\"닉네임\" variant=\"outlined\"\n          InputProps={\n            {\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n              // endAdornment: (\n              // <InputAdornment position=\"end\">\n              //   <IconButton\n              //     aria-label=\"toggle password visibility\"\n              //     onClick={handleSearchUniv}\n              //     onMouseDown={handleMouseDownPassword}\n              //   >\n              //     <Search />\n              //   </IconButton>\n              // </InputAdornment>\n              // ),\n            }\n          }\n          value={nickname}\n          onChange={event => {\n            setNickname(event.target.value)\n          }}\n        />\n        <TextField\n          className={classes.root} label=\"패스워드\" variant=\"outlined\"\n          type={input.showPassword ? 'text' : 'password'}\n          InputProps={\n            {\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Lock />\n                </InputAdornment>\n              ),\n              endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                >\n                  {input.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n              ),\n            }\n          }\n          value={password}\n          onChange={event => {\n            setPassword(event.target.value)\n          }}\n        />\n        <Button\n          className={classes.root}\n          variant=\"contained\"\n          onClick={handleRegister}\n        >\n          등록하기\n        </Button>\n      </div>\n    )\n  )\n  return (\n    <div className=\"loginscreen\">\n      <div className=\"bottom_drawer\">\n        <Drawer\n          anchor=\"bottom\"\n          open={state.open}\n          onClose={toggleDrawer(false)}\n        >\n          {bottomDrawer(state.login_page)}\n        </Drawer>\n      </div>\n    </div>\n  )\n}\n\nfunction SideDrawer(props) {\n  const classes = useStyles()\n  const [open, setOpen] = useState(false)\n  const [login, setLogin] = useState(false)\n  const [cookies, setCookie, removeCookie] = useCookies('cookie-name')\n\n  const menu = {bounty: 'Bounty', mypage: 'My Page'}\n  const toggleDrawer = open => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    props.onClick(open)\n    setOpen(open)\n  }\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleDrawerClick = event => {\n    props.onClickList(event.currentTarget.querySelector('span').innerText)\n  }\n\n  useEffect(() => {\n    console.log(cookies)\n  }, [])\n\n  useMemo(() => (setOpen(props.open)), [props.open]);\n  let history = useHistory()\n\n  return (\n    <div className=\"sideDrawer_frame\">\n      <div className=\"side_drawer\">\n        {/* <SwipeableDrawer\n          open={open}\n          onClose={toggleDrawer(false)}\n          onOpen={toggleDrawer(true)}\n        >\n          {sideDrawer(open)}\n        </SwipeableDrawer> */}\n        <Drawer\n          className={classes.drawer}\n          anchor=\"left\"\n          open={open}\n          onClose={toggleDrawer(false)}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={toggleDrawer(false)}>\n              <ChevronLeft />\n            </IconButton>\n          </div>\n          <List>\n            {Object.keys(menu).map((key, index) => (\n              <ListItem button key={key} component={Link} to={\"/\"+key} onClick={\n                handleDrawerClick\n              }>\n                <ListItemIcon>{index === 0 ? <AttachMoney /> : <Email />}</ListItemIcon>\n                <ListItemText primary={menu[key]} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n      </div>\n    </div>\n  )\n}\n\nfunction BountyCard(props) {\n  const classes = useStyles()\n  const bull = <span className={classes.content_bullet}>•</span>;\n\n  return (\n    <div className=\"bountycard\">\n      <Card className={classes.content_card}>\n          <CardContent>\n            {/* <Typography className={classes.content_title} color=\"textSecondary\" gutterBottom>\n              Word of the Day\n            </Typography> */}\n            <Typography className={classes.title_card} variant=\"h5\" component=\"h2\">\n              {props.title}\n            </Typography>\n            <Typography className={classes.bounty_card}>\n              {props.bounty + \" Point\"}\n            </Typography>\n            <Typography className={classes.text_card} color=\"textSecondary\">\n              {props.text}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Typography className={classes.date_card}>\n              {props.timelimit}\n            </Typography>\n            <Button variant='contained' className={classes.btn_card} size=\"small\">지원하기</Button>\n          </CardActions>\n        </Card>\n    </div>\n  )\n}\n\nfunction AddBountyDialog(props) {\n\n  const classes = useStyles();\n  const { onClose, open } = props;\n  const [ title, setTitle ] = useState(\"\")\n  const [ text, setText ] = useState(\"\")\n  const [ bounty, setBounty ] = useState(0)\n  const [ date, setDate ] = useState(new Date())\n  const [ time, setTime ] = useState(new Date())\n\n  const myInit = {\n    method: 'POST',\n    header: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      title: title,\n      text: text,\n      bounty: bounty,\n      time_limit: date+ \" \" +time+\":00\",\n    }),\n  };\n  const myRequest = new Request(url+\"/Bounty/Register\", myInit);\n  \n  const handleClose = () => {\n    onClose(true);\n  };\n\n  const handleSubmit = () => {\n    // console.log(title, text, bounty, date, time)\n    fetch(myRequest).then(res => {\n      return res;\n    }).then(res => {\n      console.log(res);\n    })\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">의뢰 추가하기</DialogTitle>\n      <TextField\n          className={classes.dialog_textfield} label=\"의뢰명\" variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={title}\n          onChange={event => {\n            setTitle(event.target.value)\n          }}\n        />\n        <TextField\n          className={classes.dialog_textfield} label=\"설명\" variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={text}\n          onChange={event => {\n            setText(event.target.value)\n          }}\n        />\n        <TextField\n          className={classes.dialog_textfield}\n          label=\"현상금\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={bounty}\n          onChange={event => {\n            setBounty(event.target.value)\n          }}\n          variant=\"outlined\"\n        />\n        <TextField\n          className={classes.dialog_textfield}\n          label=\"마감일\"\n          type=\"date\"\n          // defaultValue=\"2017-05-24T10:30\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={date}\n          onChange={event => {\n            setDate(event.target.value)\n          }}\n          variant=\"outlined\"\n        />\n        <TextField\n          className={classes.dialog_textfield}\n          label=\"마감시간\"\n          type=\"time\"\n          // defaultValue=\"2017-05-24T10:30\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={time}\n          onChange={event => {\n            setTime(event.target.value)\n          }}\n          variant=\"outlined\"\n        />\n        <Button\n          className={classes.dialog_textfield}\n          variant='contained'\n          onClick={handleSubmit}\n        >추가</Button>\n    </Dialog>\n  )\n}\n\nfunction BountyPage(props) {\n  const classes = useStyles()\n\n  const myInit = {\n    method: 'GET',\n  };\n\n  const myRequest = new Request(url+\"/Bounty/ListAll\", myInit);\n\n  const [open, setOpen] = useState(false)\n  const [content, setContent] = useState([])\n\n  var tmp_content = []\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  };\n\n  const handleClose = value => {\n    setOpen(false)\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await fetch(myRequest).then(async (json) => {\n        json.json().then(async data => {\n          setContent(data.content)\n        })\n      })\n    }\n\n    fetchData()\n  }, []);\n\n  return (\n    <div className=\"bountypage\">\n      { content.map((bounty, index) => (\n      <BountyCard key={index} title={bounty.title} text={bounty.text} bounty={bounty.bounty} timelimit={bounty.time_limit} />\n    )) }\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        className={classes.add_bounty}\n        onClick={handleClickOpen}\n      >\n        <Add />\n      </Fab>\n      <AddBountyDialog open={open} onClose={handleClose} />\n    </div>\n  )\n}\n\nfunction MainScreen() {\n  const classes = useStyles()\n\n  const [cookies, setCookie, removeCookie] = useCookies(['cookie-name']);\n  const [openBottomDrawer, setOpenBottomDrawer] = useState(false)\n  const [openSideDrawer, setOpenSideDrawer] = useState(false)\n  const [selectedItem, setSelectedItem] = useState(\"\")\n\n  const handleClickLogin = () => {\n    setOpenBottomDrawer(true)\n  }\n  \n  const handleUpdateBottomDrawer = (open) => {\n    setOpenBottomDrawer(open)\n  }\n\n  const handleClickSideButton = () => {\n    setOpenSideDrawer(true)\n  }\n  \n  const handleUpdateSideDrawer = (open) => {\n    setOpenSideDrawer(open)\n  }\n\n  const handleUpdateContent = selected_item => {\n    setSelectedItem(selected_item)\n    setOpenSideDrawer(false)\n  }\n\n  return (\n    <div className=\"mainscreen\">\n      <AppBar>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleClickSideButton}>\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Bounty\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <Search />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          {(\n            cookies.email ? (\n              <div></div>\n            ) : (\n              <Button\n                color=\"inherit\"\n                onClick={handleClickLogin}\n                style={{\n                  fontSize: 16,\n                  position: \"relative\",\n                }}\n              >\n                Login\n              </Button>\n            )\n          )}\n        </Toolbar>\n      </AppBar>\n      <div className={classes.toolbar} />\n      <Router>\n        <Switch>\n          <Route path=\"/bounty\" component={BountyPage} />\n          <Route path=\"/\" />\n        </Switch>\n      </Router>\n      <SideDrawer open={openSideDrawer} onClick={handleUpdateSideDrawer} onClickList={handleUpdateContent} />\n      <LoginScreen open={openBottomDrawer} onClick={handleUpdateBottomDrawer}/>\n    </div>\n  )\n}\n\nconst tutorialSteps = [\n  {\n    head: \"헌터야\",\n    content: \"의뢰를 수행해 포인트를 벌어보라랑렁러아랑랑랑랑라ㅏㄹ라라라라라라\",\n  },\n  {\n    head: \"2\",\n    content: \"22222222222222222222222222222222222222222222222222222222222222222\",\n  }\n]\n\nfunction TutorialScreen() {\n  const [activeStep, setActiveStep] = useState(0)\n\n  const handleNext = (event) => {\n    if (activeStep === tutorialSteps.length - 1) {\n      return\n    }\n    setActiveStep(prevActiveStep => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1)\n  }\n\n  const handleStepChange = step => {\n    setActiveStep(step)\n  }\n\n  return (\n    <div className=\"tutorial\">\n      <div className=\"tutorial_stepper\">\n        <SwipeableViews\n          axis='x'\n          index={activeStep}\n          onChangeIndex={handleStepChange}\n          enableMouseEvents\n        >\n          {\n            tutorialSteps.map((step, index) => (\n              <div \n                className=\"stepper_content\"\n                key={step.head}\n              >\n                <h2>{step.head}</h2>\n                <span>{step.content}</span>\n              </div>\n            ))\n          }\n        </SwipeableViews>\n        <MobileStepper\n          variant=\"dots\"\n          steps={tutorialSteps.length}\n          position=\"static\"\n          activeStep={activeStep}\n          nextButton={\n            <Button size=\"small\" onClick={handleNext}>\n              {activeStep === tutorialSteps.length-1 ? (\n                <span>Finish</span>\n              ) : (\n                <span>Next</span>\n              )}\n              <KeyboardArrowRight />\n            </Button>\n          }\n          backButton={\n            <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n              <KeyboardArrowLeft />\n              Back\n            </Button>\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/tutorial\">\n            <TutorialScreen />\n          </Route>\n          <Route path=\"/\">\n            <MainScreen />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render((\n    <CookiesProvider><App /></CookiesProvider>\n    ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}